# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ALsZHBD2tI_Xnf0HT0R-1afONkBIHtJb
"""

# ===============================
# 1. Install Required Packages
# ===============================
!pip install streamlit pyngrok -q

# ===============================
# 2. Import Libraries
# ===============================
import os
from pyngrok import ngrok

# Read token from file
with open("ngrok_setup.txt") as f:
    NGROK_TOKEN = f.read().strip()

# ===============================
# 3. Authenticate ngrok
# ===============================
ngrok.set_auth_token(NGROK_TOKEN)

# Commented out IPython magic to ensure Python compatibility.
# # ===============================
# # 4. Write Streamlit App (example)
# # ===============================
# %%writefile app.py

# Kill any old processes
!pkill -f streamlit
!pkill -f ngrok

# Run Streamlit in the background
!nohup streamlit run app.py --server.port 8501 &

# ===============================
# 5. Run Streamlit with ngrok
# ===============================
public_url = ngrok.connect(8501)
print("üåç Public URL:", public_url)

app_code = """
import joblib
import streamlit as st
import pandas as pd
model = joblib.load("final_model.pkl")
st.set_page_config(page_title="‚ù§Ô∏è Heart Disease Prediction", layout="wide")

st.title("‚ù§Ô∏è Heart Disease Prediction App")
st.write("This app predicts the likelihood of heart disease based on patient data.")

st.sidebar.header("üîß Input Patient Data")

age = st.sidebar.number_input("Age", 35, 70, 52)
sex = st.sidebar.selectbox("Sex (0 = Female, 1 = Male)", [0, 1])  # 0 = female, 1 = male
cp = st.sidebar.selectbox("Chest Pain Type (cp)", [0, 1, 2, 3])
trestbps = st.sidebar.number_input("Resting Blood Pressure (trestbps)", 94, 200, 147)
chol = st.sidebar.number_input("Serum Cholesterol (chol)", 126, 564, 345)
fbs = st.sidebar.selectbox("Fasting Blood Sugar > 120 mg/dl (0 = No, 1 = Yes)", [0, 1])
restecg = st.sidebar.selectbox("Resting ECG (restecg)", [0, 1, 2])
thalach = st.sidebar.number_input("Max Heart Rate Achieved (thalach)", 88, 195, 141)
exang = st.sidebar.selectbox("Exercise Induced Angina (0 = No, 1 = Yes)", [0, 1])
oldpeak = st.sidebar.number_input("Oldpeak (ST depression)", 0.0, 6.2, 3.1)
slope = st.sidebar.selectbox("Slope of ST segment", [0, 1, 2])
ca = st.sidebar.selectbox("Number of major vessels (ca)", [0, 1, 2, 3, 4])
thal = st.sidebar.selectbox("Thal", [0, 1, 2, 3])

input_data = pd.DataFrame([[age, sex, cp, trestbps, chol, fbs,
                            restecg, thalach, exang, oldpeak,
                            slope, ca, thal]],
                          columns=["age", "sex", "cp", "trestbps", "chol", "fbs",
                                   "restecg", "thalach", "exang", "oldpeak",
                                   "slope", "ca", "thal"])

if st.button("Predict"):
    prediction = model.predict(input_data)[0]
    if prediction == 1:
        st.error("‚ö†Ô∏è Heart Disease Detected")
    else:
        st.success("‚úÖ No Heart Disease Detected")
"""

with open("app.py", "w") as f:
    f.write(app_code)